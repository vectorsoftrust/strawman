<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="3"?>
<?rfc tocindent="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<rfc category="std" docName="draft-richer-vectors-of-trust-08"
     ipr="trust200902">
  <front>
    <title abbrev="vectors-of-trust">Vectors of Trust</title>

    <author fullname="Justin Richer" initials="J." role="editor"
            surname="Richer">
      <organization>Bespoke Engineering</organization>

      <address>
        <email>ietf@justin.richer.org</email>
      </address>
    </author>

    <author fullname="Leif Johansson" initials="L." surname="Johansson">
      <organization>Swedish University Network</organization>

      <address>
        <postal>
          <street>Thulegatan 11</street>

          <city>Stockholm</city>

          <region/>

          <code/>

          <country>Sweden</country>
        </postal>

        <phone/>

        <facsimile/>

        <email>leifj@sunet.se</email>

        <uri>http://www.sunet.se</uri>
      </address>
    </author>

    <date day="18" month="March" year="2018"/>

    <abstract>
      <t>This document defines a mechanism for describing and signaling
      several aspects that are used to calculate trust placed in a digital
      identity transaction.</t>
    </abstract>

    <note title="Requirements Language">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
      "OPTIONAL" in this document are to be interpreted as described in BCP 14
      <xref target="RFC2119">RFC 2119</xref> <xref target="RFC8174">RFC
      8174</xref> when, and only when, they appear in all capitals, as shown
      here.</t>
    </note>
  </front>

  <middle>
    <section anchor="Introduction" title="Introduction">
      <t>Methods for measuring trust in digital identity transactions have
      historically fallen into two main categories: either all measurements
      are combined into a single scalar value, or trust decisions are
      calculated locally based on a detailed set of attribute metadata. This
      document defines a method of conveying trust information that is more
      expressive than a single value but less complex than comprehensive
      attribute metadata.</t>

      <t>Prior to the <xref target="SP-800-63-3">third edition</xref>
      published in 2017, <xref target="SP-800-63-2">NIST Special Publication
      800-63</xref> used a single scalar measurement of trust called a Level
      of Assurance (LoA). An LoA can be used to compare different transactions
      within a system at a coarse level. For instance, an LoA4 transaction is
      generally considered more trusted (across all measured categories) than
      an LoA2 transaction. The LoA for a given transaction is computed by the
      identity provider (IdP) and is consumed by a relying party (RP). Since
      the trust measurement is a simple numeric value, it's trivial for RPs to
      process and compare. However, since each LoA encompasses many different
      aspects of a transaction, it can't express many real-world situations.
      For instance, an anonymous user account might have a very strong
      credential, such as would be common of a whistle-blower or political
      dissident. Despite the strong credential, the lack of identity proofing
      would make any transactions conducted by the account to fall into a low
      LoA. Furthermore, different use cases and domains require subtly
      different definitions for their LoA categories, and one group's LoA2 is
      not equivalent or even comparable to another group's LoA2.</t>

      <t>Attribute based access control (ABAC) systems used by RPs may need to
      know details about a user's attributes, such as how recently the
      attribute data was verified and by whom. Attribute metadata systems are
      capable of expressing extremely fine-grained detail about the
      transaction. However, this approach requires the IdP to collect, store,
      and transmit all of this attribute data for the RP's consumption. The RP
      must process this data, which may be prohibitive for trivial security
      decisions.</t>

      <t>Vectors of Trust (VoT) seeks a balance between these two alternatives
      by allowing expression of multiple aspects of an identity transaction
      (including but not limited to identity proofing, credential strength,
      credential management, and assertion strength), without requiring full
      attribute metadata descriptions. This method of measurement gives more
      actionable data and expressiveness than an LoA, but is still relatively
      easy for the RP to process. It is anticipated that VoT can be used
      alongside more detailed attribute metadata systems as has that proposed
      by <xref target="NISTIR-8112">NISITIR 8112</xref>. The RP can use the
      vector value for most basic decisions but be able to query the IdP for
      additional attribute metadata where needed. Furthermore, it is
      anticipated that some trust frameworks will provide a simple mapping
      between certain sets of vector values to LoAs, for RPs that do not have
      a need for the vector's more fine-grained detail. In such systems, an RP
      is given a choice of how much detail it needs in order to process a
      given request.</t>

      <t>This document defines a data model for these vectors and an
      on-the-wire format for conveying them between parties, anchored in a
      trust definition. This document also provides guidance for defining
      values for use in conveying this information, including four component
      categories and guidance on defining values within those categories.
      Additionally, this document defines a general-purpose set of component
      values in <xref target="default-components">an appendix</xref> for use
      cases that do not need something more specific.</t>

      <section title="Terminology">
        <t><list style="hanging">
            <t hangText="Identity Provider (IdP)">A system that manages
            identity information and is able to assert this information across
            the network through an identity API.</t>

            <t hangText="Identity Subject">The person (user) engaging in the
            identity transaction, being identified by the identity provider
            and identified to the relying party.</t>

            <t hangText="Primary Credential">The means used by the identity
            subject to authenticate to the identity provider.</t>

            <t hangText="Federated Credential">The assertion presented by the
            IdP to the RP across the network to authenticate the user.</t>

            <t hangText="Relying Party (RP)">A system that consumes identity
            information from an IdP for the purposes of authenticating the
            user.</t>

            <t hangText="Trust Framework">A document containing business rules
            and legal clauses that defines how different parties in an
            identity transaction may act.</t>

            <t hangText="Trustmark">A verifiable attestation that a party has
            proved to follow the constraints of a trust framework.</t>

            <t hangText="Trustmark Provider">A system that issues and provides
            verification for trustmarks.</t>

            <t hangText="Vector">A multi-part data structure, used here for
            conveying information about an authentication transaction.</t>

            <t hangText="Vector Component">One of several constituent parts
            that make up a vector.</t>

            <t hangText="Vector Component Value">One of the values applied to
            a vector component within a vector.</t>
          </list></t>
      </section>

      <section anchor="Model" title="An Identity Model">
        <t>This document assumes the following model for identity based on
        identity federation technologies:</t>

        <t>The identity subject (also known as the user) is associated with an
        identity provider which acts as a trusted third party on behalf of the
        user with regard to a relying party by making identity assertions
        about the user to the relying party.</t>

        <t>The real-world person represented by the identity subject is in
        possession of a primary credential bound to the identity subject by
        the identity provider (or an agent thereof) in such a way that the
        binding between the credential and the real-world user is a
        representation of the identity proofing process performed by the
        identity provider (or an agent thereof) to verify the identity of the
        real-world person. This is all carried by an identity assertion across
        the network to the relying party during the authentication
        transaction.</t>
      </section>

      <section anchor="Architecture" title="Component Architecture">
        <t>The term Vectors of Trust is based on the mathematical construct of
        a vector, which is defined as an item composed of multiple independent
        values.</t>

        <t>An important goal for this work is to balance the need for
        simplicity (particularly on the part of the relying party) with the
        need for expressiveness. As such, this vector construct is designed to
        be composable and extensible.</t>

        <t>All components of the vector construct MUST be orthogonal such that
        no aspect of a component overlaps an aspect of another component, as
        much as is possible.</t>
      </section>
    </section>

    <section anchor="Components" title="Component Definitions">
      <t>This specification defines four orthogonal components: identity
      proofing, primary credential usage, primary credential management, and
      assertion presentation. These dimensions MUST be evaluated by the RP in
      the context of a trust framework and SHOULD be combined with other
      information when making a trust and authorization decision.</t>

      <t>This specification also defines values for each component to be used
      in the absence of a more specific trust framework in <xref
      target="default-components"/>. It is expected that trust frameworks will
      provide context, semantics, and mapping to legal statutes and business
      rules for each value in each component. Consequently, a particular
      vector value can only be compared with vectors defined in the same
      context. The RP MUST understand and take into account the trust
      framework context in which a vector is being expressed in order for to
      process a vector securely.</t>

      <t>Each component is identified by a demarcator consisting of a single
      uppercase ASCII letter in the range <spanx style="verb">[A-Z]</spanx>.
      The demarcator SHOULD reflect the category with which it is associated
      in a natural manner. Demarcators for components MUST be registered as
      described in <xref target="IANA"/>. It is anticipated that trust
      framework definitions will use this registry to define specialized
      components, though it is RECOMMENDED that trust frameworks re-use
      existing components wherever possible.</t>

      <t>The value for a given component within a vector of trust is defined
      by its demarcator character followed by a single digit or lowercase
      ASCII letter in the range <spanx style="verb">[0-9a-z]</spanx>.
      Categories which have a natural ordering SHOULD use digits, with <spanx
      style="verb">0</spanx> as the lowest value. Categories which do not have
      a natural ordering, or which can have an ambiguous ordering, SHOULD use
      letters. Categories MAY use both letter style and number style value
      indicators simultaneously. For example, a category could define <spanx
      style="verb">0</spanx> as a special "empty" value while using letters
      such as <spanx style="verb">a</spanx>, <spanx style="verb">b</spanx>,
      <spanx style="verb">c</spanx> for normal values can to differentiate
      between these types of options. Another system could have a base
      category with a numeric value with additonal details provided by letter
      values.</t>

      <t>Regardless of the type of value indicator used, the values assigned
      to each component of a vector MUST NOT be assumed always to have
      inherent ordinal properties when compared to the same or other
      components in the vector space. In other words, <spanx style="verb">1</spanx>
      is different from <spanx style="verb">2</spanx>, but it is dangerous to
      assume that <spanx style="verb">2</spanx> is always better than <spanx
      style="verb">1</spanx> in a given transaction.</t>

      <t>Each component MAY be repeated with multiple different values within
      a single vector. The same component and value combination MUST NOT be
      repeated within a single vector.</t>

      <section anchor="IdentityProofing" title="Identity Proofing (P)">
        <t>The Identity Proofing dimension defines, overall, how strongly the
        set of identity attributes have been verified and vetted. In other
        words, this dimension describes how likely it is that a given digital
        identity transaction corresponds to a particular (real-world) identity
        subject.</t>

        <t>This dimension SHALL be represented by the <spanx style="verb">P</spanx>
        demarcator and a single-character level value, such as <spanx
        style="verb">P0</spanx>, <spanx style="verb">P1</spanx>, etc. Most
        definitions of identity proofing will have a natural ordering, as more
        or less stringent proofing can be applied to an individual. In such
        cases it is RECOMMENDED that a digit style value be used for this
        component and that only a single value be allowed to be communicated
        in a transaction.</t>
      </section>

      <section anchor="Credential" title="Primary Credential Usage (C)">
        <t>The primary credential usage dimension defines how strongly the
        primary credential can be verified by the IdP. In other words, how
        easily that credential could be spoofed or stolen.</t>

        <t>This dimension SHALL be represented by the <spanx style="verb">C</spanx>
        demarcator and a single-character level value, such as <spanx
        style="verb">Ca</spanx>, <spanx style="verb">Cb</spanx>, etc. Most
        definitions of credential usage will not have an overall natural
        ordering, as there may be several equivalent classes described within
        a trust framework. In such cases it is RECOMMENDED that a letter style
        value be used for this component and that multiple distinct credential
        usage factors be allowed to be communicated simultaneously, such as
        when Multi-Factor Authentication is used.</t>
      </section>

      <section title="Primary Credential Management (M)">
        <t>The primary credential management dimension conveys information
        about the expected lifecycle of the primary credential in use,
        including its binding, rotation, and revocation. In other words, the
        use and strength of policies, practices, and security controls used in
        managing the credential at the IdP and its binding to the intended
        individual.</t>

        <t>This dimension SHALL be represented by the <spanx style="verb">M</spanx>
        demarcator and a single-character level value, such as <spanx
        style="verb">Ma</spanx>, <spanx style="verb">Mb</spanx>, etc. Most
        definitions of credential management will not have an overall natural
        ordering, though there can be preference and comparison between values
        in some circumstances. In such cases it is RECOMMENDED that a letter
        style value be used for this component and that multiple distinct
        values be allowed to be communicated simultaneously.</t>
      </section>

      <section anchor="AssertionPresentation"
               title="Assertion Presentation (A)">
        <t>The Assertion Presentation dimension defines how well the given
        digital identity can be communicated across the network without
        information leaking to unintended parties, and without spoofing. In
        other words, this dimension describes how likely it is that a given
        digital identity was actually asserted by a given identity provider
        for a given transaction. While this information is largely already
        known by the RP as a side effect of processing an identity assertion,
        this dimension is still very useful when the RP <xref
        target="RequestingVector">requests a login</xref> and when describing
        the <xref target="discovery">capabilities of an IdP</xref>.</t>

        <t>This dimension SHALL be represented by the <spanx style="verb">A</spanx>
        demarcator and a level value, such as <spanx style="verb">Aa</spanx>,
        <spanx style="verb">Ab</spanx>, etc. Most definitions of assertion
        presentation will not have an overall natural ordering. In such cases,
        it is RECOMMENDED that a letter style value be used for this component
        and that multiple values be allowed to be communicated
        simultaneously.</t>
      </section>
    </section>

    <section anchor="CommunicatingVectors"
             title="Communicating Vector Values to RPs">
      <t>A vector of trust is designed to be used in the context of an
      identity and authentication transaction, providing information about the
      context of a federated credential. The vector therefore needs to be able
      to be communicated in the context of the federated credential in a way
      that is strongly bound to the assertion representing the federated
      credential.</t>

      <t>This vector has several requirements for use.</t>

      <t><list style="symbols">
          <t>All applicable vector components and values need to be combined
          into a single vector.</t>

          <t>The vector can be communicated across the wire unbroken and
          untransformed.</t>

          <t>All vector components need to remain individually available, not
          "collapsed" into a single value.</t>

          <t>The vector needs to be protected in transit.</t>

          <t>The vector needs to be cryptographically bound to the assertion
          which it is describing.</t>

          <t>The vector needs to be interpreted in the context of a specific
          trust framework definition.</t>
        </list></t>

      <t>These requirements lead us to defining a simple string-based
      representation of the vector that can be incorporated within a number of
      different locations and protocols without further encoding.</t>

      <section anchor="Serialization" title="On the Wire Representation">
        <t>The vector MUST be represented as a period-separated ('.') list of
        vector components, with no specific order. A vector component type MAY
        occur multiple times within a single vector, with each component
        separated by periods. Multiple values for a component are considered a
        logical AND of the values. A specific value of a vector component MUST
        NOT occur more than once in a single vector. That is, while <spanx
        style="verb">Cc.Cd</spanx> is a valid vector, <spanx style="verb">Cc.Cc</spanx>
        is not.</t>

        <t>Vector components MAY be omitted from a vector. No holding space is
        left for an omitted vector component. If a vector component is
        omitted, the vector is making no claim for that component. This MAY be
        distinct from a specific component value stating that a component was
        not used.</t>

        <t>Vector values MUST be communicated along side of a trustmark
        definition to give the components context. The trustmark MUST be
        cryptographically bound to the vector value, such as in a signed
        assertion. A vector value without context is unprocessable, and
        vectors defined in different contexts are not directly comparable as
        whole values. Different trustmarks MAY re-use component definitions
        (including their values), allowing comparison of individual components
        across contexts without requiring complete understanding of all
        aspects of a context. The proper processing of such cross-context
        values is outside the scope of this specification.</t>

        <t>For example, the vector value <spanx style="verb">P1.Cc.Ab</spanx>
        translates to "pseudonymous, proof of shared key, signed
        browser-passed verified assertion, and no claim made toward credential
        management" in the context of this specification's <xref
        target="default-components">definitions</xref>. The vector value of
        <spanx style="verb">Cb.Mc.Cd.Ac</spanx> translates to "known device,
        full proofing require for issuance and rotation, cryptographic proof
        of possession of a shared key, signed back-channel verified assertion,
        and no claim made toward identity proofing" in the same context.</t>
      </section>

      <section anchor="OIDC" title="In OpenID Connect">
        <t>In <xref target="OpenID">OpenID Connect</xref>, the IdP MUST send
        the vector as a string within the <spanx style="verb">vot</spanx>
        (vector of trust) claim in the ID token. The <xref
        target="Trustmark">trustmark</xref> that applies to this vector MUST
        be sent as an HTTPS URL in the <spanx style="verb">vtm</spanx> (vector
        trust mark) claim to provide context to the vector.</t>

        <t>For example, the body of an ID token claiming "pseudonymous, proof
        of shared key, signed back-channel verified token, and no claim made
        toward credential management" could look like this JSON object payload
        of the ID token.</t>

        <figure>
          <artwork><![CDATA[{ 
    "iss": "https://idp.example.com/", 
    "sub": "jondoe1234", 
    "vot": "P1.Cc.Ac",
    "vtm": "https://trustmark.example.org/trustmark/idp.example.com"
}]]></artwork>
        </figure>

        <t>The body of the ID token is signed and optionally encrypted using
        JOSE, as per the OpenID Connect specification. By putting the <spanx
        style="verb">vot</spanx> and <spanx style="verb">vtm</spanx> values
        inside the ID token, the vector and its context are strongly bound to
        the federated credential represented by the ID token.</t>
      </section>

      <section anchor="SAML" title="In SAML">
        <t>In SAML, a vector is communicated as an <spanx style="verb">AuthenticationContextDeclRef</spanx>.
        A vector is represented by prefixing it with the <spanx style="verb">urn urn:ietf:param:[TBD]</spanx>
        to form a full URN. The <spanx style="verb">AuthenticationContextDeclaration</spanx>
        corresponding to a given vector is a <spanx style="verb">AuthenticationContextDeclaration</spanx>
        element containing an <spanx style="verb">Extension</spanx> element
        with components of the vector represented by the following XML
        schema:</t>

        <figure>
          <artwork><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xs:schema 
    targetNamespace="urn:ietf:param:[TBD]:schema"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
   <xs:element name="Vector">
      <xs:annotation>
         <xs:documentation>This represents a set of 
             vector components.</xs:documentation>
      </xs:annotation>
      <xs:simpleType>
         <xs:restriction base="xsd:token">
            <xs:pattern value="([A-Z][a-z0-9])(\.[A-Z][a-z0-9])*"/> 
         </xs:restriction>
      </xs:simpleType>
   </xs:element>
</xs:schema>
]]></artwork>
        </figure>

        <t>For instance the vector P1.Cc.Ac is represented by the
        AuthenticationContextDeclRef URN <spanx style="verb">urn:ietf:param:[TBD]:P1.Cc.Ac</spanx>
        (or <spanx style="verb">urn:ietf:param:[TBD]:Cc.P1.Ac</spanx> or ...)
        which corresponds to the following <spanx style="verb">AuthenticationContextDeclaration</spanx>:</t>

        <figure>
          <artwork><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<AuthenticationContextDeclaration 
  xmlns="urn:oasis:names:tc:SAML:2.0:ac">
   <Extension>
      <vot:Vector>P1.Cc.Ac</vot:Vector>
   </Extension>
</AuthenticationContextDeclaration>
]]></artwork>
        </figure>
      </section>
    </section>

    <section anchor="RequestingVector" title="Requesting Vector Values">
      <t>In some identity protocols, the RP can request that particular vector
      components be applied to a given identity transaction. Using the same
      syntax as defined in <xref target="Serialization"/>, an RP can indicate
      that it desires particular aspects be present in the authentication.
      Processing and fulfillment of these requests are in the purview of the
      IdP and details are outside the scope of this specification.</t>

      <section anchor="RequestingOIDC" title="In OpenID Connect">
        <t>In <xref target="OpenID">OpenID Connect</xref>, the client MAY
        request a set of acceptable VoT values with the <spanx style="verb">vtr</spanx>
        (vector of trust request) claim request as part of the Request Object.
        The value of this field is an array of JSON strings, each string
        identifying an acceptable set of vector components. The component
        values within each vector are ANDed together while the separate
        vectors are ORed together. For example, a list of vectors in the form
        <spanx style="verb">["P1.Cb.Cc.Ab", "Ce.Ab"]</spanx> is stating that
        either the full set of "P1 AND Cb AND Cc AND Ab" simultaneously OR the
        full set of "Ce AND Ab" simultaneously are acceptable to this RP for
        this transaction.</t>

        <t>Vector request values MAY omit components, indicating that any
        value is acceptable for that component category, including omission of
        that component in the response vector.</t>

        <t>The mechanism by which the IdP processes the <spanx style="verb">vtr</spanx>
        and maps that to the authentication transaction are out of scope of
        this specification.</t>
      </section>

      <section anchor="RequestingSAML" title="In SAML">
        <t>In <xref target="SAML">SAML</xref> the client can request a set of
        acceptable VoT values by including the corresponding <spanx
        style="verb">AuthenticationContextDeclRef</spanx> URIs together with
        an <spanx style="verb">AuthenticationContextClassRef</spanx>
        corresponding to the trust mark (cf below). The processing rules in
        <xref target="SAML"/> apply.</t>
      </section>
    </section>

    <section anchor="Trustmark" title="Trustmark">
      <t>When an RP receives a specific vector from an IdP, it needs to make a
      decision to trust the vector within a specific context. A trust
      framework can provide such a context, allowing legal and business rules
      to give weight to an IdP's claims. A trustmark is a verifiable claim to
      conform to a specific component of a trust framework, such as a verified
      identity provider. The trustmark conveys the root of trustworthiness
      about the claims and assertions made by the IdP, including the vector
      itself.</t>

      <t>The trustmark MUST be available from an HTTPS URL served by the trust
      framework provider. The contents of this URL are a <xref
      target="RFC8259">JSON</xref> document with the following fields:</t>

      <t><list style="hanging">
          <t hangText="idp">The issuer URL of the identity provider that this
          trustmark pertains to. This MUST match the corresponding issuer
          claim in the identity token, such as the OpenID Connect <spanx
          style="verb">iss</spanx> field. This MUST be an HTTPS URL.</t>

          <t hangText="trustmark_provider">The issuer URL of the trustmark
          provider that issues this trustmark. The URL that a trustmark is
          fetched from MUST start with the <spanx style="verb">iss</spanx> URL
          in this field. This MUST be an HTTPS URL.</t>
        </list></t>

      <t>Vector component values offered by this IdP are be listed in a using
      their demarcator. For the four component categories defined in this
      specification:</t>

      <t><list style="hanging">
          <t hangText="P">Array of strings containing identity proofing values
          for which the identity provider has been assessed and approved.</t>

          <t hangText="C">Array of strings containing primary credential usage
          values for which the identity provider has been assessed and
          approved.</t>

          <t hangText="M">Array of strings containing primary credential
          management values for which the identity provider has been assessed
          and approved.</t>

          <t hangText="A">Array of strings containing assertion strength
          values for which the identity provider has been assessed and
          approved.</t>
        </list></t>

      <t>For example, the following trustmark provided by the
      trustmark.example.org organization applies to the idp.example.org
      identity provider:</t>

      <figure>
        <artwork><![CDATA[{
  "idp": "https://idp.example.org/",
  "trustmark_provider": "https://trustmark.example.org/",
  "P": ["P0", "P1"],
  "C": ["C0", "Ca", "Cb"],
  "M": ["Mb"],
  "A": ["Ab", "Ac"]
}]]></artwork>
      </figure>

      <t>An RP wishing to check the claims made by an IdP can fetch the
      information from the trustmark provider about what claims the IdP is
      allowed to make in the first place and process them accordingly. The RP
      MAY cache the information returned from the trustmark URL.</t>

      <t>The operational aspects of the IdP MAY be included in the trustmark
      definition. For example, if a trustmark can indicate that an IdP uses
      multiple redundant hosts, encrypts all data at rest, or other
      operational security mechanisms that affect the trustworthiness of
      assertions made by the IdP. The definition of these additional aspects
      is outside the scope of this specfication.</t>

      <t>The means by which the RP decides which trustmark providers it trusts
      is out of scope for this specification and is generally configured out
      of band.</t>

      <t>Though most trust frameworks will provide a third-party independent
      verification service for components, an IdP MAY host its own trustmark.
      For example, a self-hosted trustmark would look like:</t>

      <figure>
        <artwork><![CDATA[{
  "idp": "https://idp.example.org/",
  "trustmark_provider": "https://idp.example.org/",
  "P": ["P0", "P1"],
  "C": ["C0", "Ca", "Cb"],
  "M": ["Mb"],
  "A": ["Ab", "Ac"]
}]]></artwork>
      </figure>
    </section>

    <section anchor="discovery" title="Discovery">
      <t>The IdP MAY list all of its available trustmarks as part of its
      discovery document, such as the OpenID Connect Discovery server
      configuration document. In this context, trustmarks are listed in the
      <spanx style="verb">trustmarks</spanx> element which contains a single
      <xref target="RFC8259">JSON</xref> object. The keys of this JSON object
      are trustmark provider issuer URLs and the values of this object are the
      corresponding trustmark URLs for this IdP.</t>

      <figure>
        <artwork><![CDATA[{
  "iss": "https://idp.example.org/",
  "trustmarks": {
    "https://trustmark.example.org/":
      "https://trustmark.example.org/trustmark/idp.example.org",
    "https://trust.example.net/": 
      "https://trust.example.net/trustmark/idp.example.org"
  }
}]]></artwork>
      </figure>
    </section>

    <section anchor="extension" title="Defining New Vector Values">
      <t>Vectors of Trust is meant to be a flexible and reusable framework for
      communicating authentication data between networked parties in an
      identity federation protocol. However, the exact nature of the
      information needed is reliant on the parties requiring the information
      and the relationship between them. While this document does define a
      usable default set of values, it is anticipated that many situations
      will require an extension of this specification for their own use.</t>

      <t>Components categories such as those defined in <xref
      target="Components"/> are intended to be general purpose and reusable in
      a variety of circumstances. Extension specifications SHOULD re-use
      existing category definitions where possible. Extensions MAY create
      additional categories where needed by using the registry defined in
      <xref target="IANA"/>. The registry encourages re-use and discovery of
      existing categories across different implementations. In other words,
      the <spanx style="verb">P</spanx> category in another framework SHOULD
      be used for identity proofing and related information.</t>

      <t>The values of components such as those defined in <xref
      target="default-components"/> are intended to be contextual to the
      defining trust document. While this specification's component values are
      intended to be general-purpose and extensions MAY re-use the values and
      their definitions, extensions MUST define all allowable values. As these
      values are always interpreted in the context of a trustmark, these
      values are not recorded in a central registry. Consequently, a <spanx
      style="verb">P1</spanx> value from one framework and a <spanx
      style="verb">P1</spanx> value from another framework could have very
      different interpretations depending on their contextual trustmark
      documents.</t>

      <t>Extensions to this specification SHOULD choose either a numerical
      ordering or a group category approach to component values as described
      in <xref target="Components"/>, though combinations of both types MAY be
      used. Extensions to this specification MUST specify whether multiple
      values are allowed for each category, and while any component category
      is generally allowed to have multiple distinct values, a specific
      definition of a set of values in an extension MAY limit a given
      component category to a single value per transaction.</t>
    </section>

    <section anchor="Acknowledgements" title="Acknowledgements">
      <t>The authors would like to thank the members of the Vectors of Trust
      mailing list in the IETF for discussion and feedback on the concept and
      document, and the members of the ISOC Trust and Identity team for their
      support.</t>
    </section>

    <section anchor="IANA" title="IANA Considerations">
      <t>This specification creates one registry and registers several values
      into existing registries.</t>

      <section title="Vector Of Trust Components Registry">
        <t>This specification establishes the Vectors of Trust Components
        Registry.</t>

        <t>Component demarcators are registered by <xref
        target="RFC8126">Specification Required</xref> after a two-week review
        period on the vot@ietf.org mailing list, on the advice of one or more
        Designated Experts.</t>

        <t>Criteria that should be applied by the Designated Experts includes
        determining whether the proposed registration duplicates existing
        functionality, whether it is likely to be of general applicability or
        whether it is useful only for a single application, and whether the
        registration description is clear.</t>

        <t>Registration requests sent to the mailing list for review should
        use an appropriate subject (e.g., "Request to register Vector of Trust
        Component name: example"). Within the review period, the Designated
        Expert(s) will either approve or deny the registration request,
        communicating this decision to the review list and IANA. Denials
        should include an explanation and, if applicable, suggestions as to
        how to make the request successful. IANA must only accept registry
        updates from the Designated Expert(s) and should direct all requests
        for registration to the review mailing list.</t>

        <section anchor="ComponentTemplate" title="Registration Template">
          <t><list style="hanging">
              <t hangText="Demarcator Symbol"><vspace/>An uppercase ASCII
              letter in the range [A-Z] representing this component (e.g.,
              "X").</t>

              <t hangText="Description:"><vspace/> Brief description of the
              component (e.g., "Example description").</t>

              <t hangText="Change controller:"><vspace/> For Standards Track
              RFCs, state "IESG". For other documents, give the name of the
              responsible party. Other details (e.g., postal address, email
              address, home page URI) may also be included.</t>

              <t hangText="Specification document(s):"><vspace/> Reference to
              the document(s) that specify the token endpoint authorization
              method, preferably including a URI that can be used to retrieve
              a copy of the document(s). An indication of the relevant
              sections may also be included but is not required.</t>
            </list></t>
        </section>

        <section title="Initial Registry Contents">
          <t>The Vector of Trust Components Registry contains the definitions
          of vector components and their associated demarcators.</t>

          <t><list style="symbols">
              <t>Demarcator Symbol: P</t>

              <t>Description: Identity proofing</t>

              <t>Change Controller: IESG</t>

              <t>Specification document(s):: [[ this document ]]</t>
            </list><list style="symbols">
              <t>Demarcator Symbol: C</t>

              <t>Description: Primary credential usage</t>

              <t>Change Controller: IESG</t>

              <t>Specification document(s):: [[ this document ]]</t>
            </list><list style="symbols">
              <t>Demarcator Symbol: M</t>

              <t>Description: Primary credential management</t>

              <t>Change Controller: IESG</t>

              <t>Specification document(s):: [[ this document ]]</t>
            </list><list style="symbols">
              <t>Demarcator Symbol: A</t>

              <t>Description: Assertion presentation</t>

              <t>Change Controller: IESG</t>

              <t>Specification document(s):: [[ this document ]]</t>
            </list></t>
        </section>
      </section>

      <section title="Additions to the OAuth Parameters Registry">
        <t>This specification adds the following values to the OAuth
        Parameters Registry established by <xref target="RFC6749"/>.</t>

        <t><list style="symbols">
            <t>Demarcator Symbol: vtr</t>

            <t>Description: Vector of Trust request</t>

            <t>Change Controller: IESG</t>

            <t>Document: [[ this document ]]</t>
          </list></t>
      </section>

      <section title="Additions to JWT Claims Registry">
        <t>This specification adds the following values to the JSON Web Token
        Claims Registry established by <xref target="RFC7519"/>.</t>

        <t><list style="symbols">
            <t>Claim name: vot</t>

            <t>Description: Vector of Trust value</t>

            <t>Change Controller: IESG</t>

            <t>Document: [[ this document ]]</t>
          </list><list style="symbols">
            <t>Demarcator Symbol: vtm</t>

            <t>Description: Vector of Trust trustmark</t>

            <t>Change Controller: IESG</t>

            <t>Document: [[ this document ]]</t>
          </list></t>
      </section>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>The vector of trust value MUST be cryptographically protected in
      transit, using TLS as described in <xref target="BCP195"/>. The vector
      of trust value must be associated with a trustmark marker, and the two
      must be carried together in a cryptographically bound mechanism such as
      a signed identity assertion. A signed OpenID Connect ID Token and a
      signed SAML assertion both fulfil this requirement.</t>

      <t>The vector value is always associated with a trustmark and needs to
      be interpreted by the RP in the context of that trustmark. Different
      trust frameworks can apply different interpretations to the same
      component value, much as was the case with LoA. Therefore, an RP
      interpreting a component value in the the wrong context could mistakenly
      accept or reject a request. In order to avoid this mistake, RPs need to
      reject vectors that are defined in trust frameworks that they do not
      understand how to interpret properly.</t>

      <t>The VoT framework provides a mechanism for describing and conveying
      trust information. It does not define any policies for asserting the
      values of the vector, nor does it define any policies for applying the
      values of a vector to an RP's security decision process. These policies
      must be agreed upon by the IdP and RP, and they should be expressed in
      detail in an associated human-readable trust framework document.</t>
    </section>

    <section anchor="Privacy" title="Privacy Considerations">
      <t>By design, vector of trust values contain information about the
      user's authentication and associations that can be made thereto.
      Therefore, all aspects of a vector of trust contain potentially
      privacy-sensitive information and must be guarded as such. Even in the
      absence of specific attributes about a user, knowledge that the user has
      been highly proofed or issued a strong token could provide more
      information about the user than was intended. It is recommended that
      systems in general use the minimum vectors applicable to their use case
      in order to prevent inadvertent information disclosure.</t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      <?rfc include='http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml'?>

      <?rfc include='http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7519.xml'?>

      <?rfc include='http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6749.xml'?>

      <?rfc include='http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8126.xml'?>

      <?rfc include='http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml'?>

      <?rfc include='http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8259.xml'?>

      <reference anchor="OpenID">
        <front>
          <title>OpenID Connect Core 1.0</title>

          <author fullname="Nat Sakimura" initials="N." surname="Sakimura">
            <organization abbrev="NRI">Nomura Research Institute,
            Ltd.</organization>
          </author>

          <author fullname="John Bradley" initials="J." surname="Bradley">
            <organization abbrev="Ping Identity">Ping Identity</organization>
          </author>

          <author fullname="Michael B. Jones" initials="M.B." surname="Jones">
            <organization abbrev="Microsoft">Microsoft</organization>
          </author>

          <date day="8" month="November" year="2014"/>
        </front>

        <format target="http://openid.net/specs/openid-connect-core-1_0.html"
                type="HTML"/>
      </reference>
    </references>

    <references title="Informative References">
      <reference anchor="SP-800-63-2"
                 target="https://dx.doi.org/10.6028/NIST.SP.800-63-2">
        <front>
          <title>Electronic Authentication Guideline</title>

          <author>
            <organization>National Institute of Standards and Technology, U.S.
            Department of Commerce</organization>
          </author>

          <date month="August" year="2013"/>
        </front>

        <seriesInfo name="NIST" value="SP 800-63-2"/>

        <seriesInfo name="DOI" value="10.6028/NIST.SP.800-63-2"/>
      </reference>

      <reference anchor="SP-800-63-3"
                 target="https://doi.org/10.6028/NIST.SP.800-63-3">
        <front>
          <title>Digital Identity Guideline</title>

          <author>
            <organization>National Institute of Standards and Technology, U.S.
            Department of Commerce</organization>
          </author>

          <date month="June" year="2017"/>
        </front>

        <seriesInfo name="NIST" value="SP 800-63-3"/>

        <seriesInfo name="DOI" value="10.6028/NIST.SP.800-63-3"/>
      </reference>

      <reference anchor="NISTIR-8112"
                 target="https://pages.nist.gov/NISTIR-8112/NISTIR-8112.html">
        <front>
          <title>A Proposed Schema for Evaluating Federated Attributes</title>

          <author>
            <organization>National Institute of Standards and Technology, U.S.
            Department of Commerce</organization>
          </author>

          <date month="January" year="2018"/>
        </front>

        <seriesInfo name="NIST" value="NISTIR 8112"/>
      </reference>

      <reference anchor="BCP195"
                 target="http://www.rfc-editor.org/info/bcp195">
        <front>
          <title>Recommendations for Secure Use of Transport Layer Security
          (TLS) and Datagram Transport Layer Security (DTLS)</title>

          <author fullname="Y. Sheffer" initials="Y." surname="Sheffer">
            <organization/>
          </author>

          <author fullname="R. Holz" initials="R." surname="Holz">
            <organization/>
          </author>

          <author fullname="P. Saint-Andre" initials="P."
                  surname="Saint-Andre">
            <organization/>
          </author>

          <date month="May" year="2015"/>

          <abstract>
            <t>Transport Layer Security (TLS) and Datagram Transport Layer
            Security (DTLS) are widely used to protect data exchanged over
            application protocols such as HTTP, SMTP, IMAP, POP, SIP, and
            XMPP. Over the last few years, several serious attacks on TLS have
            emerged, including attacks on its most commonly used cipher suites
            and their modes of operation. This document provides
            recommendations for improving the security of deployed services
            that use TLS and DTLS. The recommendations are applicable to the
            majority of use cases.</t>
          </abstract>
        </front>

        <seriesInfo name="BCP" value="195"/>

        <seriesInfo name="RFC" value="7525"/>

        <seriesInfo name="DOI" value="10.17487/RFC7525"/>

        <format octets="60283" type="ASCII"/>
      </reference>
    </references>

    <section anchor="default-components"
             title="Vectors of Trust Default Component Value Definitions">
      <t>The following general-purpose component definitions MAY be used when
      a more specific set is unavailable. These component values are
      referenced in a trustmark definition defined by [[ this document URL
      ]].</t>

      <t>Extensions of this specification SHOULD define their own component
      values as described in <xref target="extension"/>. Where possible,
      extensions MAY re-use specific values here. </t>

      <section title="Identity Proofing">
        <t>The identity proofing component of this vector definition
        represents increasing scrutiny during the proofing process. Higher
        levels are largely subsumptive of lower levels, such that <spanx
        style="verb">P2</spanx> fulfills requirements for <spanx style="verb">P1</spanx>,
        etc. Mutltiple distinct values from this category MUST NOT be used in
        a single transaction.</t>

        <t><list style="hanging">
            <t hangText="P0">No proofing is done, data is not guaranteed to be
            persistent across sessions</t>

            <t hangText="P1">Attributes are self-asserted but consistent over
            time, potentially pseudonymous</t>

            <t hangText="P2">Identity has been proofed either in person or
            remotely using trusted mechanisms (such as social proofing)</t>

            <t hangText="P3">There is a binding relationship between the
            identity provider and the identified party (such as
            signed/notarized documents, employment records)</t>
          </list></t>
      </section>

      <section title="Primary Credential Usage">
        <t>The primary credential usage component of this vector definition
        represents distinct categories of primary credential that MAY be used
        together in a single transaction. Multiple distinct values from this
        category MAY be used in a single transaction.</t>

        <t><list style="hanging">
            <t hangText="C0">No credential is used / anonymous public
            service</t>

            <t hangText="Ca">Simple session HTTP cookies (with nothing
            else)</t>

            <t hangText="Cb">Known device</t>

            <t hangText="Cc">Shared secret such as a username and password
            combination</t>

            <t hangText="Cd">Cryptographic proof of key possession using
            shared key</t>

            <t hangText="Ce">Cryptographic proof of key possession using
            asymmetric key</t>

            <t hangText="Cf">Sealed hardware token / trusted biometric /
            TPM-backed keys</t>
          </list></t>
      </section>

      <section title="Primary Credential Management">
        <t>The primary credential management component of this vector
        definition represents distinct categories of management that MAY be
        considered separately or together in a single transaction. Many trust
        framework deployments MAY use a single value for this component as a
        baseline for all transactions and thereby omit it. Multiple distinct
        values from this category MAY be used in a single transaction.</t>

        <t><list style="hanging">
            <t hangText="Ma">Self-asserted primary credentials (user chooses
            their own credentials and must rotate or revoke them manually) /
            no additional verification for primary credential issuance or
            rotation</t>

            <t hangText="Mb">Remote issuance and rotation / use of backup
            recover credentials (such as email verification) / deletion on
            user request</t>

            <t hangText="Mc">Full proofing required for each issuance and
            rotation / revocation on suspicious activity</t>
          </list></t>
      </section>

      <section title="Assertion Presentation">
        <t>The assertion presentation component of this vector definition
        represents distinct categories of assertion which are RECOMMENDED to
        be used in a subsumptive manner but MAY be used together. Multiple
        distinct values from this category MAY be used in a single
        transaction.</t>

        <t><list style="hanging">
            <t hangText="Aa">No protection / unsigned bearer identifier (such
            as an HTTP session cookie in a web browser)</t>

            <t hangText="Ab">Signed and verifiable assertion, passed through
            the user agent (web browser)</t>

            <t hangText="Ac">Signed and verifiable assertion, passed through a
            back channel</t>

            <t hangText="Ad">Assertion encrypted to the relying parties key
            and audience protected</t>
          </list></t>
      </section>
    </section>

    <section title="Document History">
      <t>-08</t>

      <t><list style="symbols">
          <t>Incorporated shepherd comments. </t>

          <t>Updated references.</t>

          <t>Added reference to NISTIR 8112.</t>

          <t>Moved default component definitions to appendix. </t>
        </list></t>

      <t>-07</t>

      <t><list style="symbols">
          <t>Rewrote introduction to clarify focus of document.</t>
        </list></t>

      <t>-06</t>

      <t><list style="symbols">
          <t>Added section on extensions to VoT.</t>

          <t>Made it so that every component category could be
          multi-valued.</t>

          <t>Added reference to updated 800-63-3.</t>

          <t>Fixed example text width.</t>

          <t>Switched document back to standards-track from experimental now
          that there are extensions in the wild.</t>
        </list></t>

      <t>-05</t>

      <t><list style="symbols">
          <t>Updated IANA considerations section to include instructions.</t>

          <t>Made security and privacy considerations non-normative.</t>
        </list></t>

      <t>-04</t>

      <t><list style="symbols">
          <t>Updated SAML example to be consistent.</t>
        </list></t>

      <t>-03</t>

      <t><list style="symbols">
          <t>Clarified language of LoA's in introduction.</t>

          <t>Added note on operational security in trustmarks.</t>

          <t>Removed empty sections and references.</t>
        </list></t>

      <t>-02</t>

      <t><list style="symbols">
          <t>Converted C, M, and A values to use letters instead of numbers in
          examples.</t>

          <t>Updated SAML to a structured example pending future updates.</t>

          <t>Defined guidance for when to use letters vs. numbers in category
          values.</t>

          <t>Restricted category demarcators to uppercase and values to
          lowercase and digits.</t>

          <t>Applied clarifying editorial changes from list comments.</t>
        </list></t>

      <t>- 01</t>

      <t><list style="symbols">
          <t>Added IANA registry for components.</t>

          <t>Added preliminary security considerations and privacy
          considerations.</t>

          <t>Split "credential binding" into "primary credential usage" and
          "primary credential management".</t>
        </list></t>

      <t>- 00</t>

      <t><list style="symbols">
          <t>Created initial IETF drafted based on strawman proposal discussed
          on VoT list.</t>

          <t>Split vector component definitions into their own section to
          allow extension and override.</t>

          <t>Solidified trustmark document definition.</t>
        </list></t>
    </section>
  </back>
</rfc>
